@model IEnumerable<Harvin.Models.Produto>

@{
    ViewBag.Title = "Index";
    List<Harvin.Models.Categoria> ListaCategorias = new List<Harvin.Models.Categoria>();
    ListaCategorias = Harvin.DAO.CategoriaDAO.ListaCategorias();
    float porcentagem = 0;
    float mediaEstoque = 0;
}

<h4>Produtos</h4>
<p>Aqui você terá acesso a todos os produtos dividos por categorias, para uma melhor organização. Clicando nelas, você terá acesso somente a seus produtos, tal como clicando nos produtos, onde terão suas atuais informações.</p>

<p>
    <blockquote><i class="material-icons">add</i> Novo produto</blockquote>
    <blockquote><i class="material-icons">assignment</i> Lista de Produtos</blockquote>
</p>

<p style="margin: 30px;">
    <a href="@Url.Action("Create")" class="btn-floating btn-large waves-effect waves-light red"><i class="material-icons">add</i></a>
    <a href="@Url.Action("Todos")" class="btn-floating btn-large waves-effect waves-light blue"><i class="material-icons">assignment</i></a>
</p>


<!--INICIO DAS COLLAPSABLES DE CATEGORIAS QUE CONTÉM OS SEUS RESPECTIVOS PRODUTOS-->
<ul class="collapsible" data-collapsible="accordion">
    @foreach (var categorias in ListaCategorias) {
        mediaEstoque = 0;
        int totalProdutos = 0;
        <li>
            @foreach (var produto in Model) {
                if (produto.categoriaId.Equals(categorias.CategoriaId)) {
                    totalProdutos++;
                    mediaEstoque = mediaEstoque + Harvin.DAO.ProdutoDAO.VerificaSituacaoEstoque(produto);
                }
            }

            @{ 
                mediaEstoque = mediaEstoque / totalProdutos;
            }

            <div class="collapsible-header"><img src="@categorias.imagem" />@categorias.nome
                @if (mediaEstoque > 70) {
                    <span class="badge">@totalProdutos produto(s)<br />Estoque: <b class="green-text">@mediaEstoque%</b></span>
                } else if (mediaEstoque > 40) {
                    <span class="badge">@totalProdutos produto(s)<br />Estoque: <b class="orange-text">@mediaEstoque%</b></span>
                } else {
                    <span class="badge">@totalProdutos produto(s)<br />Estoque: <b class="red-text">@mediaEstoque%</b></span>
                }
            </div>
            <div class="collapsible-body">
                <div class="row">
                    @foreach (var produto in Model) {
                        if (produto.categoriaId.Equals(categorias.CategoriaId)) {
                            <div class="col s6 m4 l3">

                                <!--PRODUTO MOSTRADO COMO UM CART DENTRO DA COLLAPSABLE DA CATEGORIA-->
                                <div class="card">
                                    <div class="card-image waves-effect waves-block waves-light">
                                        <img class="activator" src="@produto.imagem">
                                    </div>
                                    <div class="card-content">
                                        <span class="card-title activator grey-text text-darken-4">@Html.DisplayFor(modelItem => produto.nome)</span>
                                    </div>
                                    <div class="card-reveal">
                                        <span class="card-title grey-text text-darken-4"><i class="material-icons">close</i></span>
                                        <b>Produto</b>
                                        <br />
                                        @Html.DisplayFor(modelItem => produto.nome)
                                        <br />
                                        <br />
                                        <b>Valor</b>
                                        <br />
                                        @Html.DisplayFor(modelItem => produto.valorUnitario)
                                        <br />
                                        <br />
                                        <b>Quantidade Atual</b>
                                        <br />
                                        @Html.DisplayFor(modelItem => produto.quantidadeAtualEstoque)
                                        <br />
                                        <br />
                                        <b>Quantidade Mínima</b>
                                        <br />
                                        @Html.DisplayFor(modelItem => produto.quantidadeMinimaEstoque)
                                        <br />
                                        <br />
                                        <b>Quantidade Máxima</b>
                                        <br />
                                        @Html.DisplayFor(modelItem => produto.quantidadeMaximaEstoque)
                                        <br />
                                        <br />
                                        <b>Situação do Estoque</b>
                                        <!--CALCULA PORCENTAGEM DO ESTOQUE-->
                                        @if (produto.quantidadeAtualEstoque == produto.quantidadeMaximaEstoque) {
                                            <p class="green-text"><b>COMPLETO</b></p>
                                            <p>@Harvin.DAO.ProdutoDAO.VerificaSituacaoEstoque(produto)%</p>
                                            <div class="progress">
                                                <div class="determinate green" style="width: @Harvin.DAO.ProdutoDAO.VerificaSituacaoEstoque(produto)%"></div>
                                            </div>
                                        } else if (produto.quantidadeAtualEstoque > produto.quantidadeMinimaEstoque) {
                                            <p class="green-text"><b>BOM</b></p>
                                            <p>@Harvin.DAO.ProdutoDAO.VerificaSituacaoEstoque(produto)%</p>
                                            <div class="progress">
                                                <div class="determinate green" style="width: @Harvin.DAO.ProdutoDAO.VerificaSituacaoEstoque(produto)%"></div>
                                            </div>
                                        } else {
                                            <p class="red-text"><b>CRÍTICO</b></p>
                                            <p>@Harvin.DAO.ProdutoDAO.VerificaSituacaoEstoque(produto)%</p>
                                            <div class="progress">
                                                <div class="determinate red" style="width: @Harvin.DAO.ProdutoDAO.VerificaSituacaoEstoque(produto)%"></div>
                                            </div>
                                        }
                                        <br />
                                        <b>Descrição</b>
                                        <br />
                                        @Html.DisplayFor(modelItem => produto.descricao)
                                        <br />
                                        <br />
                                        <b>Comentários</b>
                                        <br />
                                        @Html.DisplayFor(modelItem => produto.comentarios)
                                        <br /><br />
                                        <a href="@Url.Action("Edit", new { id = produto.id })" class="btn-floating btn-large waves-effect waves-light green"><i class="material-icons">mode_edit</i></a>
                                        <a href="@Url.Action("Delete", new { id = produto.id })" class="btn-floating btn-large waves-effect waves-light red"><i class="material-icons">delete</i></a>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>

            </div>
        </li>
    }
</ul>